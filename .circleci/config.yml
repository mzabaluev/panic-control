version: 2
jobs:
  test:
    docker:
      - image: rust:latest
    working_directory: /usr/src/crate
    steps:
      - checkout
      - run:
          name: Print version information
          command: rustc --version; cargo --version
      - run:
          name: Build and test
          command: cargo test --verbose
          environment:
            RUSTFLAGS: "-C link-dead-code"
      - persist_to_workspace:
          root: target
          paths:
            - debug/panic_control-*
            - debug/test_*-*
  test_release:
    docker:
      - image: rust:latest
    working_directory: /usr/src/crate
    steps:
      - checkout
      - run:
          name: Print version information
          command: rustc --version; cargo --version
      - run:
          name: Build and test in release profile
          command: cargo test --verbose --release
  test_nightly:
    docker:
      - image: rustlang/rust:nightly
    working_directory: /usr/src/crate
    steps:
      - checkout
      - run:
          name: Print version information
          command: rustc --version; cargo --version
      - run:
          name: Build and test with nightly Rust
          command: cargo test --verbose
  coverage:
    docker:
      - image: ragnaroek/kcov:v33
        entrypoint: /bin/bash
    working_directory: /usr/src/crate
    steps:
      - checkout
      - attach_workspace:
          at: target
      - run: mkdir target/coverage
      - run:
          name: Rerun the tests collecting coverage
          command: |
            for file in ./target/debug/*; do
              if test -x $file; then
                kcov --verify --exclude-pattern=tests \
                    target/coverage/$(basename $file) \
                  $file --quiet
              fi
            done
      - store_artifacts:
          path: target/coverage
          destination: coverage
      - persist_to_workspace:
          root: target
          paths:
            - coverage
  codecov_upload:
    docker:
      - image: buildpack-deps:curl
    working_directory: /usr/src/crate
    steps:
      # Codecov uploader needs the source and everything
      # exactly as it was during the test run.
      - checkout
      - attach_workspace:
          at: target
      - run:
          name: Upload to Codecov
          command: bash <(curl -s https://codecov.io/bash)

workflows:
  version: 2
  test_all_and_coverage:
    jobs:
      - test
      - test_release
      - test_nightly
      - coverage:
          requires:
            - test
      - codecov_upload:
          requires:
            - coverage
